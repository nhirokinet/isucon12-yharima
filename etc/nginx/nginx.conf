user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	log_format with_time '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" $request_time';
	access_log /var/log/nginx/access.log with_time;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	###### default #####
        server {
          listen 443 ssl default_server;
          ssl_certificate     /etc/nginx/tls/fullchain.pem;
          ssl_certificate_key /etc/nginx/tls/key.pem;
          ssl_dhparam         /etc/nginx/tls/dhparam.pem;
          location / {
              return 404;
          }
        }

        ##### isuports.conf #####
        server {
          listen 443 ssl http2;
          server_name *.t.isucon.dev;
        
          root /home/isucon/public/;
        
          ssl_certificate     /etc/nginx/tls/fullchain.pem;
          ssl_certificate_key /etc/nginx/tls/key.pem;
          ssl_dhparam         /etc/nginx/tls/dhparam.pem;
          ssl_protocols       TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        
          location / {
            try_files $uri /index.html;
          }
        
          location ~ ^/(api|initialize) {
            proxy_set_header Host $host;
            proxy_read_timeout 600;
            proxy_pass http://127.0.0.1:3000;
          }
        
          location /auth/ {
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:3001;
          }
        }
}
